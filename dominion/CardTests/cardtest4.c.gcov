        -:    0:Source:cardtest4.c
        -:    0:Graph:cardtest4.gcno
        -:    0:Data:cardtest4.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "../dominion.c"
        -:    2:#include "../rngs.c"
        -:    3:#include "../myassert.h"
        -:    4:
        -:    5:/*************************************
        -:    6:Test for "steward" card
        -:    7:*************************************/
        -:    8:
        1:    9:int main(){
        -:   10:
        -:   11://	Test Initialization
        -:   12:	int i, temp1, temp2, temp3, temp4;
        1:   13:	srand (time(NULL));
        -:   14:	struct gameState game1;
        -:   15:	struct gameState game2;
        -:   16:	struct gameState game3;
        1:   17:	int cards[10] = {estate, duchy, adventurer, embargo, sea_hag, feast, gardens, mine, tribute, outpost}; 
        1:   18:	int playerNum = 4;
        -:   19:	int theplayer;
        -:   20:
        -:   21:// Random settings
        1:   22:	int ramdomSeed = rand() % 99999 + 1;	
        1:   23:	int bonus = rand() % 10;
        1:   24:	int handNum = rand() % MAX_HAND;
        -:   25:
        1:   26:	check_functions(initializeGame(playerNum, cards, ramdomSeed, &game1));
        1:   27:	check_functions(initializeGame(playerNum, cards, ramdomSeed, &game2));
        1:   28:	check_functions(initializeGame(playerNum, cards, ramdomSeed, &game3));
        -:   29:	
        -:   30:
        -:   31:
        -:   32:// Test of choice 1: draw 2 cards but discard 1;
        1:   33:	theplayer = whoseTurn(&game1);
        1:   34:	temp1 = game1.handCount[theplayer];
        1:   35:	check_functions(cardEffect(steward, 1, 0, 0, &game1, 0, 0));
        1:   36:	temp2 = game1.handCount[theplayer];
        1:   37:	check_equal(temp1,temp2-1);	
        -:   38:
        -:   39:// Test of choice 2: add 2 coins
        1:   40:	theplayer = whoseTurn(&game2);
        1:   41:	temp1 = game2.coins;
        1:   42:	check_functions(cardEffect(steward, 2, 0, 0, &game2, 0, 0));
        1:   43:	temp2 = game2.coins;
        1:   44:	check_equal(temp1,temp2-2);	
        -:   45:
        -:   46:// Test of choice 3: trash 2 cards in hand, so sum up 3 cards in hand are discarded
        1:   47:	theplayer = whoseTurn(&game3);
        1:   48:	temp1 = game3.handCount[theplayer];
        1:   49:	check_functions(cardEffect(steward, 3, 2, 2, &game3, 0, 0));
        1:   50:	temp2 = game3.handCount[theplayer];
        1:   51:	check_equal(temp1,temp2+3);	
        -:   52:
        1:   53:	printf("TEST SUCCESSFULLY COMPLETED\n");
        1:   54:	return 0;
        -:   55:}
